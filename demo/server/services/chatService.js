// Generated by CoffeeScript 2.5.1
(function() {
  var ChatService;

  module.exports = ChatService = class ChatService {
    constructor(app) {
      this.app = app;
    }

    // Socket.io events
    enter(socket, user) {
      return socket.broadcast.emit('hello', user);
    }

    list(socket, data, callback) {
      var users_list;
      users_list = this.app.users.list();
      return callback(users_list);
    }

    status(socket, current_status) {
      var sessid, user;
      // Retrieve session ID
      sessid = this.app.sessions.get(socket.id);
      // Retrieve user
      user = this.app.users.get_user(sessid);
      // Update status
      this.app.users.status(sessid, current_status);
      // Announce updated status
      return socket.broadcast.emit('status', {
        user: user.nickname,
        status: current_status
      });
    }

    message(socket, text) {
      var msg_count, sessid, user;
      // Retrieve session ID
      sessid = this.app.sessions.get(socket.id);
      // Retrieve user
      user = this.app.users.get_user(sessid);
      // Increase message number
      this.app.messages.add(sessid);
      
      // Forward message to room
      console.log(`${user.nickname} say: ${text}`);
      // socket.broadcast.emit 'message', text

      // Announce number of message modification
      msg_count = this.app.messages.count(sessid);
      return socket.broadcast.emit('message count', {
        user: user.nickname,
        number: msg_count
      });
    }

    logout(socket, uid, callback) {
      var sessid, user;
      // Retrieve session ID
      sessid = this.app.sessions.get(socket.id);
      // Retrieve user
      user = this.app.users.get_user(sessid);
      // Delete user from users list
      this.app.users.remove(sessid);
      socket.broadcast.emit('logout', user.nickname);
      return callback({
        status: 'ok'
      });
    }

    // Private methods
    _notAccessible(socket) {
      return console.error("You should not be here !!");
    }

  };

}).call(this);
